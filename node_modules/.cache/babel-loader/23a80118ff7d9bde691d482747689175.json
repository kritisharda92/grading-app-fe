{"ast":null,"code":"var _jsxFileName = \"/Users/kritisharda/Documents/grading-app-fe/src/components/ProfessorWorkflow/UploadHomeworkComponent.jsx\";\nimport React from 'react';\nimport QuestionDescription from './QuestionDescriptionComponent';\nimport Header from '../HeaderComponent/HeaderComponent';\nimport './UploadHomeworkComponent.scss';\n\nclass UploadHomeworkComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      problems: [],\n      homeworkName: '',\n      dueDate: ''\n    };\n    this.dataMain = {};\n    this.addAnotherProblem = this.addAnotherProblem.bind(this);\n    this.removeProblem = this.removeProblem.bind(this);\n    this.handleHomeworkUploadSubmit = this.handleHomeworkUploadSubmit.bind(this);\n    this.handleHomeworkName = this.handleHomeworkName.bind(this);\n    this.handleDueDate = this.handleDueDate.bind(this);\n    this.problemUpdate = this.problemUpdate.bind(this);\n    this.msg = this.msg.bind(this);\n  }\n\n  addAnotherProblem() {\n    this.setState({\n      problems: [...this.state.problems, \"\"]\n    });\n  }\n\n  removeProblem() {\n    this.setState({\n      problem: this.state.problems.splice(0, 1)\n    });\n  }\n\n  handleHomeworkUploadSubmit(event) {\n    const data = {\n      problems: this.state.problems,\n      homeworkName: this.state.homeworkName,\n      dueDate: this.state.dueDate\n    };\n    console.log(\"Submit\");\n    console.log(data);\n    console.log(this.dataMain);\n  }\n\n  handleHomeworkName(e) {\n    this.setState({\n      homeworkName: e.target.value\n    });\n  }\n\n  handleDueDate(e) {\n    this.setState({\n      dueDate: e.target.value\n    });\n  } //   myCallback = (dataFromChild) => {\n  //     [...we will use the dataFromChild here...]\n  // },\n\n\n  problemUpdate(dataFromChild) {\n    // console.log(\"Fetching data from child\")\n    console.log(\" ... \" + dataFromChild);\n    this.dataMain = dataFromChild;\n  }\n\n  msg() {\n    console.log(\"this changed!\");\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"professor-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Welcome Professor!\"), \"Homework Name: \", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"homeworkName\",\n      onChange: this.handleHomeworkName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), \"Due Date: \", React.createElement(\"input\", {\n      type: \"date\",\n      name: \"dueDate\",\n      onChange: this.handleDueDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(QuestionDescription, {\n      questionData: this.problemUpdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), this.state.problems.map((problem, index) => {\n      return React.createElement(QuestionDescription, {\n        id: index,\n        questionData: this.problemUpdate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      });\n    }), React.createElement(\"button\", {\n      onClick: this.addAnotherProblem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Add another problem\"), this.state.problems.length > 0 ? React.createElement(\"button\", {\n      onClick: this.removeProblem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Remove\") : \"\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleHomeworkUploadSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\nexport default UploadHomeworkComponent;","map":{"version":3,"sources":["/Users/kritisharda/Documents/grading-app-fe/src/components/ProfessorWorkflow/UploadHomeworkComponent.jsx"],"names":["React","QuestionDescription","Header","UploadHomeworkComponent","Component","constructor","state","problems","homeworkName","dueDate","dataMain","addAnotherProblem","bind","removeProblem","handleHomeworkUploadSubmit","handleHomeworkName","handleDueDate","problemUpdate","msg","setState","problem","splice","event","data","console","log","e","target","value","dataFromChild","render","map","index","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport QuestionDescription from './QuestionDescriptionComponent';\nimport Header from '../HeaderComponent/HeaderComponent';\nimport './UploadHomeworkComponent.scss';\n\nclass UploadHomeworkComponent extends React.Component {\n    constructor() {\n      super();\n      this.state = {\n        problems: [],\n        homeworkName: '',\n        dueDate: ''\n      }\n      this.dataMain = {};\n      this.addAnotherProblem = this.addAnotherProblem.bind(this);\n      this.removeProblem = this.removeProblem.bind(this);\n      this.handleHomeworkUploadSubmit = this.handleHomeworkUploadSubmit.bind(this);\n      this.handleHomeworkName = this.handleHomeworkName.bind(this);\n      this.handleDueDate = this.handleDueDate.bind(this);\n      this.problemUpdate = this.problemUpdate.bind(this);\n      this.msg = this.msg.bind(this);\n    }\n\n    addAnotherProblem() {\n      this.setState({ problems: [...this.state.problems, \"\" ]})\n    }\n\n    removeProblem() {\n      this.setState({ problem: this.state.problems.splice(0,1)})\n    }\n\n    handleHomeworkUploadSubmit(event) {\n      const data = {\n        problems: this.state.problems,\n        homeworkName: this.state.homeworkName,\n        dueDate: this.state.dueDate\n      }\n      console.log(\"Submit\");\n      console.log(data);\n      console.log(this.dataMain);\n    }\n\n    handleHomeworkName(e) {\n      this.setState({homeworkName: e.target.value});\n    }\n\n    handleDueDate(e) {\n      this.setState({dueDate: e.target.value});\n    }\n\n  //   myCallback = (dataFromChild) => {\n  //     [...we will use the dataFromChild here...]\n  // },\n    problemUpdate(dataFromChild) {\n      // console.log(\"Fetching data from child\")\n      console.log(\" ... \" + dataFromChild);\n      this.dataMain = dataFromChild;\n    }\n\n    msg() {\n      console.log(\"this changed!\")\n    }\n  \n    render() {\n      return (\n        <div className='professor-container'>\n            <Header />\n            <h1>Welcome Professor!</h1>\n            Homework Name: <input type=\"text\" name=\"homeworkName\" onChange={this.handleHomeworkName}/>\n            Due Date: <input type=\"date\" name=\"dueDate\" onChange={this.handleDueDate}/>\n            <QuestionDescription questionData={this.problemUpdate}/>\n            {\n              this.state.problems.map((problem,index) => {\n                return (\n                  <QuestionDescription id={index} questionData={this.problemUpdate}/>\n                )\n            })\n            }\n            <button onClick={this.addAnotherProblem}>Add another problem</button>\n            {\n              (this.state.problems.length>0) ? \n                <button onClick={this.removeProblem}>Remove</button>\n                :\n                \"\"\n            }\n\n            <br />\n            <button onClick={this.handleHomeworkUploadSubmit}>Submit</button>\n        </div>\n      );\n    }\n  }\n\n  export default UploadHomeworkComponent;"]},"metadata":{},"sourceType":"module"}