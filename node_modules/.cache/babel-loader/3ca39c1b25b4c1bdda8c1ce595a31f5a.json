{"ast":null,"code":"var _jsxFileName = \"/Users/kritisharda/Documents/grading-app-fe/src/components/ProfessorWorkflow/UploadHomeworkComponent.jsx\";\nimport React from 'react';\nimport QuestionDescription from './QuestionDescriptionComponent';\nimport Header from '../HeaderComponent/HeaderComponent';\nimport SubHeader from '../SubHeaderComponent/SubHeaderComponent';\nimport './UploadHomeworkComponent.scss';\n\nclass UploadHomeworkComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      problems: [],\n      homeworkName: '',\n      dueDate: '',\n      numberOfProblems: 1\n    };\n    this.dataMain = {};\n    this.addAnotherProblem = this.addAnotherProblem.bind(this);\n    this.removeProblem = this.removeProblem.bind(this);\n    this.handleHomeworkUploadSubmit = this.handleHomeworkUploadSubmit.bind(this);\n    this.handleHomeworkName = this.handleHomeworkName.bind(this);\n    this.handleDueDate = this.handleDueDate.bind(this);\n    this.problemUpdate = this.problemUpdate.bind(this);\n    this.msg = this.msg.bind(this);\n  }\n\n  addAnotherProblem() {\n    this.setState({\n      problems: [...this.state.problems, {}],\n      numberOfProblems: this.state.numberOfProblems + 1\n    });\n  }\n\n  removeProblem() {\n    this.setState({\n      problem: this.state.problems.splice(0, 1),\n      numberOfProblems: this.state.numberOfProblems - 1\n    });\n  }\n\n  handleHomeworkUploadSubmit(event) {\n    // console.log(event);\n    const data = {\n      problems: this.state.problems,\n      homeworkName: this.state.homeworkName,\n      dueDate: this.state.dueDate\n    };\n    const n = this.state.numberOfProblems;\n\n    for (let i = 0; i < n; i++) {\n      let prob = {\n        problemName: document.getElementById(i).getElementsByTagName(\"input\")[0].value,\n        problemDescription: document.getElementById(i).getElementsByTagName(\"input\")[1].value,\n        testCases: [{\n          // testCaseFile: document.getElementById(i).getElementsByTagName(\"input\")[2].value,\n          // expectedOutputFile: document.getElementById(i).getElementsByTagName(\"input\")[3].value,\n          testCaseFile: document.getElementById(i).getElementsByTagName(\"input\")[2].files[0],\n          expectedOutputFile: document.getElementById(i).getElementsByTagName(\"input\")[3].files[0]\n        }]\n      }; // data['problems'].push(prob);\n\n      if (data['problems'].length < i) data['problems'].push(prob);else data['problems'][i] = prob;\n    } // console.log(this.state);\n    // console.log(document.getElementById(0).getElementsByTagName(\"input\")[0].value)\n    // console.log(data['problems'][0]['testCases'][0]['testCaseFile']);\n\n\n    var fd = new FormData();\n    fd.append(\"inputFile\", data['problems'][0]['testCases'][0]['testCaseFile']);\n    fd.append(\"outputFile\", data['problems'][0]['testCases'][0]['expectedOutputFile']);\n    console.log(fd);\n    var formData = new FormData();\n    formData.append(\"homeworkName\", this.state.homeworkName);\n    formData.append(\"dueDate\", this.state.dueDate); // formData.append(\"proplems\", null);\n\n    fetch('http://localhost:8080/create', {\n      method: 'POST',\n      body: formData,\n      mode: \"no-cors\"\n    }); // alert(\"Successfully uploaded the homework!\");\n    // this.props.history.push(`/professor`);\n\n    this.props.history.push('/'); // window.location.reload();  \n  }\n\n  handleHomeworkName(e) {\n    this.setState({\n      homeworkName: e.target.value\n    });\n  }\n\n  handleDueDate(e) {\n    this.setState({\n      dueDate: e.target.value\n    });\n  } //   myCallback = (dataFromChild) => {\n  //     [...we will use the dataFromChild here...]\n  // },\n\n\n  problemUpdate(dataFromChild) {\n    this.dataMain = dataFromChild; // console.log(dataFromChild);\n    // var idx = dataFromChild.id;\n    // var newProbs = this.state.problems;\n    // if(newProbs.length < idx)\n    //   newProbs.push(dataFromChild);\n    // else\n    //   newProbs[idx] = dataFromChild;\n    // this.setState({\n    //   problem: newProbs\n    // })\n  }\n\n  msg() {\n    // console.log(\"this changed!\")\n    let myForm = document.getElementById('myForm');\n    let formData = new FormData(myForm);\n    console.log(formData);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"professor-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(SubHeader, {\n      user: \"Professor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      className: \"professor-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Create Homework\"), React.createElement(\"div\", {\n      className: \"professor-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Homework Name: \", React.createElement(\"input\", {\n      className: \"homework-name\",\n      type: \"text\",\n      name: \"homeworkName\",\n      onChange: this.handleHomeworkName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), \"Due Date: \", React.createElement(\"input\", {\n      type: \"date\",\n      name: \"dueDate\",\n      onChange: this.handleDueDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(QuestionDescription, {\n      id: 0,\n      questionData: this.problemUpdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), this.state.problems.map((problem, index) => {\n      return React.createElement(QuestionDescription, {\n        key: index,\n        id: index + 1,\n        questionData: this.problemUpdate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      });\n    }), React.createElement(\"input\", {\n      type: \"button\",\n      onClick: this.addAnotherProblem,\n      value: \"Add another problem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), this.state.problems.length > 0 ? React.createElement(\"input\", {\n      type: \"button\",\n      onClick: this.removeProblem,\n      value: \"Remove\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }) : \"\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.handleHomeworkUploadSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nexport default UploadHomeworkComponent;","map":{"version":3,"sources":["/Users/kritisharda/Documents/grading-app-fe/src/components/ProfessorWorkflow/UploadHomeworkComponent.jsx"],"names":["React","QuestionDescription","Header","SubHeader","UploadHomeworkComponent","Component","constructor","state","problems","homeworkName","dueDate","numberOfProblems","dataMain","addAnotherProblem","bind","removeProblem","handleHomeworkUploadSubmit","handleHomeworkName","handleDueDate","problemUpdate","msg","setState","problem","splice","event","data","n","i","prob","problemName","document","getElementById","getElementsByTagName","value","problemDescription","testCases","testCaseFile","files","expectedOutputFile","length","push","fd","FormData","append","console","log","formData","fetch","method","body","mode","props","history","e","target","dataFromChild","myForm","render","map","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport QuestionDescription from './QuestionDescriptionComponent';\nimport Header from '../HeaderComponent/HeaderComponent';\nimport SubHeader from '../SubHeaderComponent/SubHeaderComponent';\nimport './UploadHomeworkComponent.scss';\n\nclass UploadHomeworkComponent extends React.Component {\n    constructor() {\n      super();\n      this.state = {\n        problems: [],\n        homeworkName: '',\n        dueDate: '',\n        numberOfProblems: 1\n      }\n      this.dataMain = {};\n      this.addAnotherProblem = this.addAnotherProblem.bind(this);\n      this.removeProblem = this.removeProblem.bind(this);\n      this.handleHomeworkUploadSubmit = this.handleHomeworkUploadSubmit.bind(this);\n      this.handleHomeworkName = this.handleHomeworkName.bind(this);\n      this.handleDueDate = this.handleDueDate.bind(this);\n      this.problemUpdate = this.problemUpdate.bind(this);\n      this.msg = this.msg.bind(this);\n    }\n\n    addAnotherProblem() {\n      this.setState({ \n        problems: [...this.state.problems,{}],\n        numberOfProblems: this.state.numberOfProblems+1\n      })\n    }\n\n    removeProblem() {\n      this.setState({ \n        problem: this.state.problems.splice(0,1),\n        numberOfProblems: this.state.numberOfProblems-1\n      })\n    }\n\n    handleHomeworkUploadSubmit(event) {\n      // console.log(event);\n      const data = {\n        problems: this.state.problems,\n        homeworkName: this.state.homeworkName,\n        dueDate: this.state.dueDate\n      }\n      const n = this.state.numberOfProblems;\n\n      for(let i = 0; i<n; i++) {\n\n        let prob = {\n          problemName: document.getElementById(i).getElementsByTagName(\"input\")[0].value,\n          problemDescription: document.getElementById(i).getElementsByTagName(\"input\")[1].value,\n          testCases: [ {\n            // testCaseFile: document.getElementById(i).getElementsByTagName(\"input\")[2].value,\n            // expectedOutputFile: document.getElementById(i).getElementsByTagName(\"input\")[3].value,\n            testCaseFile: document.getElementById(i).getElementsByTagName(\"input\")[2].files[0],\n            expectedOutputFile: document.getElementById(i).getElementsByTagName(\"input\")[3].files[0],\n          }]\n        }\n        // data['problems'].push(prob);\n        if(data['problems'].length < i)\n          data['problems'].push(prob);\n        else\n          data['problems'][i] = prob;\n      }\n      // console.log(this.state);\n      // console.log(document.getElementById(0).getElementsByTagName(\"input\")[0].value)\n      // console.log(data['problems'][0]['testCases'][0]['testCaseFile']);\n\n      var fd = new FormData();\n      fd.append(\"inputFile\",data['problems'][0]['testCases'][0]['testCaseFile']);\n      fd.append(\"outputFile\",data['problems'][0]['testCases'][0]['expectedOutputFile']);\n\n      console.log(fd);\n\n      var formData = new FormData();\n      formData.append(\"homeworkName\", this.state.homeworkName);\n      formData.append(\"dueDate\", this.state.dueDate);\n      // formData.append(\"proplems\", null);\n\n      fetch('http://localhost:8080/create', {\n        method: 'POST',\n        body: formData,\n        mode: \"no-cors\"\n      });\n\n      // alert(\"Successfully uploaded the homework!\");\n      // this.props.history.push(`/professor`);\n      this.props.history.push('/');\n      // window.location.reload();  \n\n    }\n\n    handleHomeworkName(e) {\n      this.setState({homeworkName: e.target.value});\n    }\n\n    handleDueDate(e) {\n      this.setState({dueDate: e.target.value});\n    }\n\n  //   myCallback = (dataFromChild) => {\n  //     [...we will use the dataFromChild here...]\n  // },\n    problemUpdate(dataFromChild) {\n      this.dataMain = dataFromChild;\n      // console.log(dataFromChild);\n      // var idx = dataFromChild.id;\n      // var newProbs = this.state.problems;\n      // if(newProbs.length < idx)\n      //   newProbs.push(dataFromChild);\n      // else\n      //   newProbs[idx] = dataFromChild;\n\n      // this.setState({\n      //   problem: newProbs\n      // })\n    }\n\n    msg() {\n      // console.log(\"this changed!\")\n      let myForm = document.getElementById('myForm');\n      let formData = new FormData(myForm);\n\n      console.log(formData);\n    }\n  \n    render() {\n      return (\n        <div className='professor-container'>\n            <Header />\n            <SubHeader user=\"Professor\"/>\n            <h2 className=\"professor-heading\">Create Homework</h2>\n            <div className=\"professor-form\">\n              Homework Name: <input className=\"homework-name\" type=\"text\" name=\"homeworkName\" onChange={this.handleHomeworkName}/>\n              Due Date: <input type=\"date\" name=\"dueDate\" onChange={this.handleDueDate}/>\n              <QuestionDescription id={0} questionData={this.problemUpdate}/>\n              {\n                this.state.problems.map((problem,index) => {\n                  return (\n                    <QuestionDescription key={index} id={index+1} questionData={this.problemUpdate}/>\n                  )\n              })\n              }\n              <input type=\"button\" onClick={this.addAnotherProblem} value=\"Add another problem\"/>\n              {\n                (this.state.problems.length>0) ? \n                  <input type=\"button\" onClick={this.removeProblem} value=\"Remove\"/>\n                  :\n                  \"\"\n              }\n\n              <br />\n              <button type=\"submit\" onClick={this.handleHomeworkUploadSubmit}>Submit</button>\n            </div>\n        </div>\n      );\n    }\n  }\n\n  export default UploadHomeworkComponent;"]},"metadata":{},"sourceType":"module"}