{"ast":null,"code":"var _jsxFileName = \"/Users/kritisharda/Documents/GitHub/grading-app-fe/src/components/StudentWorkflow/UploadCodeComponent.jsx\";\nimport React from 'react';\nimport Header from '../HeaderComponent/HeaderComponent';\nimport SubHeader from '../SubHeaderComponent/SubHeaderComponent';\nimport './UploadCodeComponent.scss';\n\nclass UploadCodeComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    let hw = props.history.location.state.homework;\n    let user = props.history.location.state.username;\n    this.state = {\n      problems: [\"problem-1\", \"problem-2\", \"problem-3\"],\n      currentProblem: '',\n      currentHomework: hw,\n      username: user,\n      code: ''\n    };\n    this.handleCurrentProblem = this.handleCurrentProblem.bind(this);\n    this.handleUploadCode = this.handleUploadCode.bind(this);\n    this.handleCodeFile = this.handleCodeFile.bind(this);\n  }\n\n  handleCurrentProblem(e) {\n    this.setState({\n      currentProblem: e.target.value\n    });\n  }\n\n  handleUploadCode() {\n    // console.log(this.state);\n    var formData = new FormData();\n    formData.append();\n  }\n\n  handleCodeFile(e) {\n    this.setState({\n      code: e.target.files[0]\n    });\n  }\n\n  render() {\n    let prob = this.state.problems;\n    let probList = prob.length > 0 && prob.map((item, i) => {\n      return React.createElement(\"option\", {\n        key: i,\n        value: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, item);\n    }, this);\n    return React.createElement(\"div\", {\n      className: \"student-code-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(SubHeader, {\n      user: \"Student\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Select Homework\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Problem Name: \", React.createElement(\"select\", {\n      onChange: this.handleCurrentProblem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"none\",\n      selected: true,\n      disabled: true,\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \" Select an Option \"), probList), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), \"Upload Code: \", React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.handleCodeFile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"button\",\n      value: \"Upload Code\",\n      onClick: this.handleUploadCode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default UploadCodeComponent;","map":{"version":3,"sources":["/Users/kritisharda/Documents/GitHub/grading-app-fe/src/components/StudentWorkflow/UploadCodeComponent.jsx"],"names":["React","Header","SubHeader","UploadCodeComponent","Component","constructor","props","hw","history","location","state","homework","user","username","problems","currentProblem","currentHomework","code","handleCurrentProblem","bind","handleUploadCode","handleCodeFile","e","setState","target","value","formData","FormData","append","files","render","prob","probList","length","map","item","i"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from '../HeaderComponent/HeaderComponent';\nimport SubHeader from '../SubHeaderComponent/SubHeaderComponent';\nimport './UploadCodeComponent.scss';\n\nclass UploadCodeComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        let hw = props.history.location.state.homework;\n        let user = props.history.location.state.username;\n        this.state = {\n            problems: [\"problem-1\",\"problem-2\",\"problem-3\"],\n            currentProblem: '', \n            currentHomework: hw,\n            username: user,\n            code: ''\n        }\n        this.handleCurrentProblem = this.handleCurrentProblem.bind(this);\n        this.handleUploadCode = this.handleUploadCode.bind(this);\n        this.handleCodeFile = this.handleCodeFile.bind(this);\n    }\n\n    handleCurrentProblem(e) {\n        this.setState({currentProblem: e.target.value});\n    }\n\n    handleUploadCode() {\n        // console.log(this.state);\n        var formData = new FormData();\n        formData.append();\n\n    }\n\n    handleCodeFile(e) {\n        this.setState({code: e.target.files[0]});\n    }\n\n    render() {\n        let prob = this.state.problems;\n        let probList = prob.length > 0\n\t\t&& prob.map((item, i) => {\n\t\treturn (\n\t\t\t<option key={i} value={item}>{item}</option>\n        )}, this);\n    \n        return (\n          <div className='student-code-container'>\n              <Header />\n              < SubHeader user=\"Student\"/>\n              <h2>Select Homework</h2>\n              <div>\n                  {/* RIT Username: <input type=\"text\" onChange={this.handleUsername}/> <br/> <br/> */}\n                  Problem Name: <select onChange={this.handleCurrentProblem}> \n                  <option value=\"none\" selected disabled hidden> Select an Option </option>\n                  {probList} \n                  </select> <br/> <br/>\n                  Upload Code: <input type=\"file\" onChange={this.handleCodeFile}/>\n                  {/* <input type=\"button\" value=\"Upload Write-up\" /> */}\n                  <input type=\"button\" value=\"Upload Code\" onClick={this.handleUploadCode}/>\n              </div>\n          </div>\n        );\n    }\n}\n\n  export default UploadCodeComponent;"]},"metadata":{},"sourceType":"module"}