{"ast":null,"code":"var _jsxFileName = \"/Users/kritisharda/Documents/GitHub/grading-app-fe/src/components/ProfessorWorkflow/UploadHomeworkComponent.jsx\";\nimport React from 'react';\nimport QuestionDescription from './QuestionDescriptionComponent';\nimport Header from '../HeaderComponent/HeaderComponent';\nimport SubHeader from '../SubHeaderComponent/SubHeaderComponent';\nimport './UploadHomeworkComponent.scss';\n\nclass UploadHomeworkComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      problems: [],\n      homeworkName: '',\n      dueDate: '',\n      numberOfProblems: 1\n    };\n    this.dataMain = {};\n    this.addAnotherProblem = this.addAnotherProblem.bind(this);\n    this.removeProblem = this.removeProblem.bind(this);\n    this.handleHomeworkUploadSubmit = this.handleHomeworkUploadSubmit.bind(this);\n    this.handleHomeworkName = this.handleHomeworkName.bind(this);\n    this.handleDueDate = this.handleDueDate.bind(this);\n    this.problemUpdate = this.problemUpdate.bind(this);\n    this.msg = this.msg.bind(this);\n    this.getBase64 = this.getBase64.bind(this);\n  }\n\n  getBase64(file, cb) {\n    let reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = function () {\n      cb(reader.result);\n    };\n\n    reader.onerror = function (error) {\n      console.log('Error: ', error);\n    };\n  }\n\n  addAnotherProblem() {\n    this.setState({\n      problems: [...this.state.problems, {}],\n      numberOfProblems: this.state.numberOfProblems + 1\n    });\n  }\n\n  removeProblem() {\n    this.setState({\n      problem: this.state.problems.splice(0, 1),\n      numberOfProblems: this.state.numberOfProblems - 1\n    });\n  }\n\n  handleHomeworkUploadSubmit(event) {\n    var hw_dd = new FormData();\n    hw_dd.append(\"homeworkName\", this.state.homeworkName);\n    hw_dd.append(\"dueDate\", this.state.dueDate); // API call to create homework - assumptions - hw name is unique\n\n    fetch('http://localhost:8080/create', {\n      method: 'POST',\n      body: hw_dd,\n      mode: \"no-cors\"\n    });\n    const n = this.state.numberOfProblems;\n\n    for (let i = 0; i < n; i++) {\n      let prob = new FormData();\n      prob.append(\"homeworkName\", this.state.homeworkName);\n      prob.append(\"problemName\", document.getElementById(i).getElementsByTagName(\"input\")[0].value);\n      prob.append(\"problemDescription\", document.getElementById(i).getElementsByTagName(\"input\")[1].value);\n      prob.append(\"inputFile\", document.getElementById(i).getElementsByTagName(\"input\")[2].files[0]);\n      prob.append(\"outputFile\", document.getElementById(i).getElementsByTagName(\"input\")[3].files[0]); // API call to add problems to homework\n\n      fetch('http://localhost:8080/upload', {\n        method: 'POST',\n        body: prob,\n        mode: \"no-cors\"\n      });\n    }\n\n    this.props.history.push('/professorConfirmation');\n  }\n\n  handleHomeworkName(e) {\n    this.setState({\n      homeworkName: e.target.value\n    });\n  }\n\n  handleDueDate(e) {\n    this.setState({\n      dueDate: e.target.value\n    });\n  }\n\n  problemUpdate(dataFromChild) {\n    this.dataMain = dataFromChild;\n  }\n\n  msg() {\n    // console.log(\"this changed!\")\n    let myForm = document.getElementById('myForm');\n    let formData = new FormData(myForm);\n    console.log(formData);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"professor-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(SubHeader, {\n      user: \"Professor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      className: \"professor-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Create Homework\"), React.createElement(\"div\", {\n      className: \"professor-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Homework Name: \", React.createElement(\"input\", {\n      className: \"homework-name\",\n      type: \"text\",\n      name: \"homeworkName\",\n      onChange: this.handleHomeworkName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), \"Due Date: \", React.createElement(\"input\", {\n      type: \"date\",\n      name: \"dueDate\",\n      onChange: this.handleDueDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(QuestionDescription, {\n      id: 0,\n      questionData: this.problemUpdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), this.state.problems.map((problem, index) => {\n      return React.createElement(QuestionDescription, {\n        key: index,\n        id: index + 1,\n        questionData: this.problemUpdate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      });\n    }), React.createElement(\"input\", {\n      type: \"button\",\n      onClick: this.addAnotherProblem,\n      value: \"Add another problem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), this.state.problems.length > 0 ? React.createElement(\"input\", {\n      type: \"button\",\n      onClick: this.removeProblem,\n      value: \"Remove\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }) : \"\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.handleHomeworkUploadSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nexport default UploadHomeworkComponent;","map":{"version":3,"sources":["/Users/kritisharda/Documents/GitHub/grading-app-fe/src/components/ProfessorWorkflow/UploadHomeworkComponent.jsx"],"names":["React","QuestionDescription","Header","SubHeader","UploadHomeworkComponent","Component","constructor","state","problems","homeworkName","dueDate","numberOfProblems","dataMain","addAnotherProblem","bind","removeProblem","handleHomeworkUploadSubmit","handleHomeworkName","handleDueDate","problemUpdate","msg","getBase64","file","cb","reader","FileReader","readAsDataURL","onload","result","onerror","error","console","log","setState","problem","splice","event","hw_dd","FormData","append","fetch","method","body","mode","n","i","prob","document","getElementById","getElementsByTagName","value","files","props","history","push","e","target","dataFromChild","myForm","formData","render","map","index","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport QuestionDescription from './QuestionDescriptionComponent';\nimport Header from '../HeaderComponent/HeaderComponent';\nimport SubHeader from '../SubHeaderComponent/SubHeaderComponent';\nimport './UploadHomeworkComponent.scss';\n\nclass UploadHomeworkComponent extends React.Component {\n    constructor() {\n      super();\n      this.state = {\n        problems: [],\n        homeworkName: '',\n        dueDate: '',\n        numberOfProblems: 1\n      }\n      this.dataMain = {};\n      this.addAnotherProblem = this.addAnotherProblem.bind(this);\n      this.removeProblem = this.removeProblem.bind(this);\n      this.handleHomeworkUploadSubmit = this.handleHomeworkUploadSubmit.bind(this);\n      this.handleHomeworkName = this.handleHomeworkName.bind(this);\n      this.handleDueDate = this.handleDueDate.bind(this);\n      this.problemUpdate = this.problemUpdate.bind(this);\n      this.msg = this.msg.bind(this);\n      this.getBase64 = this.getBase64.bind(this);\n    }\n\n    getBase64(file, cb) {\n      let reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = function () {\n          cb(reader.result)\n      };\n      reader.onerror = function (error) {\n          console.log('Error: ', error);\n      };\n    }\n\n    addAnotherProblem() {\n      this.setState({ \n        problems: [...this.state.problems,{}],\n        numberOfProblems: this.state.numberOfProblems+1\n      })\n    }\n\n    removeProblem() {\n      this.setState({ \n        problem: this.state.problems.splice(0,1),\n        numberOfProblems: this.state.numberOfProblems-1\n      })\n    }\n\n\n    handleHomeworkUploadSubmit(event) {\n\n      var hw_dd = new FormData();\n      hw_dd.append(\"homeworkName\", this.state.homeworkName);\n      hw_dd.append(\"dueDate\", this.state.dueDate);\n\n      // API call to create homework - assumptions - hw name is unique\n      fetch('http://localhost:8080/create', {\n        method: 'POST',\n        body: hw_dd,\n        mode: \"no-cors\"\n      });\n\n      const n = this.state.numberOfProblems;\n\n      for(let i=0; i<n; i++) {\n        let prob = new FormData();\n        prob.append(\"homeworkName\", this.state.homeworkName);\n        prob.append(\"problemName\",document.getElementById(i).getElementsByTagName(\"input\")[0].value);\n        prob.append(\"problemDescription\",document.getElementById(i).getElementsByTagName(\"input\")[1].value);\n        prob.append(\"inputFile\",document.getElementById(i).getElementsByTagName(\"input\")[2].files[0]);\n        prob.append(\"outputFile\",document.getElementById(i).getElementsByTagName(\"input\")[3].files[0]);\n\n        // API call to add problems to homework\n        fetch('http://localhost:8080/upload', {\n          method: 'POST',\n          body: prob,\n          mode: \"no-cors\"\n        });\n      }\n\n      this.props.history.push('/professorConfirmation');\n\n    }\n\n    handleHomeworkName(e) {\n      this.setState({homeworkName: e.target.value});\n    }\n\n    handleDueDate(e) {\n      this.setState({dueDate: e.target.value});\n    }\n\n    problemUpdate(dataFromChild) {\n      this.dataMain = dataFromChild;\n    }\n\n    msg() {\n      // console.log(\"this changed!\")\n      let myForm = document.getElementById('myForm');\n      let formData = new FormData(myForm);\n\n      console.log(formData);\n    }\n  \n    render() {\n      return (\n        <div className='professor-container'>\n            <Header />\n            <SubHeader user=\"Professor\"/>\n            <h2 className=\"professor-heading\">Create Homework</h2>\n            <div className=\"professor-form\">\n              Homework Name: <input className=\"homework-name\" type=\"text\" name=\"homeworkName\" onChange={this.handleHomeworkName}/>\n              Due Date: <input type=\"date\" name=\"dueDate\" onChange={this.handleDueDate}/>\n              <QuestionDescription id={0} questionData={this.problemUpdate}/>\n              {\n                this.state.problems.map((problem,index) => {\n                  return (\n                    <QuestionDescription key={index} id={index+1} questionData={this.problemUpdate}/>\n                  )\n              })\n              }\n              <input type=\"button\" onClick={this.addAnotherProblem} value=\"Add another problem\"/>\n              {\n                (this.state.problems.length>0) ? \n                  <input type=\"button\" onClick={this.removeProblem} value=\"Remove\"/>\n                  :\n                  \"\"\n              }\n\n              <br />\n              <button type=\"submit\" onClick={this.handleHomeworkUploadSubmit}>Submit</button>\n            </div>\n        </div>\n      );\n    }\n  }\n\n  export default UploadHomeworkComponent;"]},"metadata":{},"sourceType":"module"}