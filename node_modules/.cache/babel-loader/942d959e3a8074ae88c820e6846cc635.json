{"ast":null,"code":"var _jsxFileName = \"/Users/kritisharda/Documents/GitHub/grading-app-fe/src/components/ProfessorWorkflow/UploadHomeworkComponent.jsx\";\nimport React from 'react';\nimport QuestionDescription from './QuestionDescriptionComponent';\nimport Header from '../HeaderComponent/HeaderComponent';\nimport SubHeader from '../SubHeaderComponent/SubHeaderComponent';\nimport './UploadHomeworkComponent.scss';\n\nclass UploadHomeworkComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      problems: [],\n      homeworkName: '',\n      dueDate: '',\n      numberOfProblems: 1\n    };\n    this.dataMain = {};\n    this.addAnotherProblem = this.addAnotherProblem.bind(this);\n    this.removeProblem = this.removeProblem.bind(this);\n    this.handleHomeworkUploadSubmit = this.handleHomeworkUploadSubmit.bind(this);\n    this.handleHomeworkName = this.handleHomeworkName.bind(this);\n    this.handleDueDate = this.handleDueDate.bind(this);\n    this.problemUpdate = this.problemUpdate.bind(this);\n    this.msg = this.msg.bind(this);\n    this.getBase64 = this.getBase64.bind(this);\n  }\n\n  getBase64(file, cb) {\n    let reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = function () {\n      cb(reader.result);\n    };\n\n    reader.onerror = function (error) {\n      console.log('Error: ', error);\n    };\n  }\n\n  addAnotherProblem() {\n    this.setState({\n      problems: [...this.state.problems, {}],\n      numberOfProblems: this.state.numberOfProblems + 1\n    });\n  }\n\n  removeProblem() {\n    this.setState({\n      problem: this.state.problems.splice(0, 1),\n      numberOfProblems: this.state.numberOfProblems - 1\n    });\n  }\n\n  handleHomeworkUploadSubmit(event) {\n    var hw_dd = new FormData();\n    hw_dd.append(\"homeworkName\", this.state.homeworkName);\n    hw_dd.append(\"dueDate\", this.state.dueDate); // API call to create homework - assumptions - hw name is unique\n    // fetch('http://localhost:8080/upload', {\n    //   method: 'POST',\n    //   body: fd,\n    //   mode: \"no-cors\"\n    // });\n\n    const n = this.state.numberOfProblems;\n\n    for (let i = 0; i < n; i++) {\n      let prob = new FormData();\n      prob.append(\"homeworkName\", this.state.homeworkName);\n      prob.append(\"problemName\", document.getElementById(i).getElementsByTagName(\"input\")[0].value);\n      prob.append(\"problemDescription\", document.getElementById(i).getElementsByTagName(\"input\")[1].value);\n      prob.append(\"inputFile\", document.getElementById(i).getElementsByTagName(\"input\")[2].files[0]);\n      prob.append(\"outputFile\", document.getElementById(i).getElementsByTagName(\"input\")[3].files[0]); // API call to add problems to homework\n      // fetch('http://localhost:8080/create', {\n      //   method: 'POST',\n      //   body: prob,\n      //   mode: \"no-cors\"\n      // });\n    }\n\n    this.props.history.push('/professorConfirmation'); // const data = {\n    //   problems: this.state.problems,\n    //   homeworkName: this.state.homeworkName,\n    //   dueDate: this.state.dueDate\n    // }\n    // const n = this.state.numberOfProblems;\n    // for(let i = 0; i<n; i++) {\n    //   let prob = {\n    //     problemName: document.getElementById(i).getElementsByTagName(\"input\")[0].value,\n    //     problemDescription: document.getElementById(i).getElementsByTagName(\"input\")[1].value,\n    //     testCases: [ {\n    //       testCaseFile: document.getElementById(i).getElementsByTagName(\"input\")[2].files[0],\n    //       expectedOutputFile: document.getElementById(i).getElementsByTagName(\"input\")[3].files[0],\n    //     }]\n    //   }\n    //   if(data['problems'].length < i)\n    //     data['problems'].push(prob);\n    //   else\n    //     data['problems'][i] = prob;\n    // }\n    // var fd = new FormData();\n    // // fd.append(\"inputFile\",data['problems'][0]['testCases'][0]['testCaseFile']);\n    // // fd.append(\"outputFile\",data['problems'][0]['testCases'][0]['expectedOutputFile']);\n    // var arr = [];\n    // for(let i = 0; i<n; i++) {\n    //   let ip64 = '';\n    //   let op64 = '';\n    //   this.getBase64(data['problems'][i]['testCases'][0]['testCaseFile'].file, (result) => {\n    //       ip64 = result;\n    //   });\n    //   this.getBase64(data['problems'][i]['testCases'][0]['expectedOutputFile'].file, (result) => {\n    //     op64 = result;\n    //   });\n    //   console.log(ip64);\n    //   const obj = {\n    //     // \"inputFile\": data['problems'][i]['testCases'][0]['testCaseFile'],\n    //     // \"outputFile\": data['problems'][i]['testCases'][0]['expectedOutputFile']\n    //     \"inputFile\": ip64,\n    //     \"outputFIle\": op64\n    //   }\n    //   arr.push(obj);\n    // }\n    // fd.append(\"test\", arr);\n    // console.log(arr);\n    // var formData = new FormData();\n    // formData.append(\"homeworkName\", this.state.homeworkName);\n    // formData.append(\"dueDate\", this.state.dueDate);\n    // formData.append(\"proplems\", null);\n    // fetch('http://localhost:8080/create', {\n    //   method: 'POST',\n    //   body: fd,\n    //   mode: \"no-cors\"\n    // });\n    // this.props.history.push('/');\n  }\n\n  handleHomeworkName(e) {\n    this.setState({\n      homeworkName: e.target.value\n    });\n  }\n\n  handleDueDate(e) {\n    this.setState({\n      dueDate: e.target.value\n    });\n  } //   myCallback = (dataFromChild) => {\n  //     [...we will use the dataFromChild here...]\n  // },\n\n\n  problemUpdate(dataFromChild) {\n    this.dataMain = dataFromChild; // console.log(dataFromChild);\n    // var idx = dataFromChild.id;\n    // var newProbs = this.state.problems;\n    // if(newProbs.length < idx)\n    //   newProbs.push(dataFromChild);\n    // else\n    //   newProbs[idx] = dataFromChild;\n    // this.setState({\n    //   problem: newProbs\n    // })\n  }\n\n  msg() {\n    // console.log(\"this changed!\")\n    let myForm = document.getElementById('myForm');\n    let formData = new FormData(myForm);\n    console.log(formData);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"professor-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }), React.createElement(SubHeader, {\n      user: \"Professor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      className: \"professor-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Create Homework\"), React.createElement(\"div\", {\n      className: \"professor-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"Homework Name: \", React.createElement(\"input\", {\n      className: \"homework-name\",\n      type: \"text\",\n      name: \"homeworkName\",\n      onChange: this.handleHomeworkName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }), \"Due Date: \", React.createElement(\"input\", {\n      type: \"date\",\n      name: \"dueDate\",\n      onChange: this.handleDueDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }), React.createElement(QuestionDescription, {\n      id: 0,\n      questionData: this.problemUpdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }), this.state.problems.map((problem, index) => {\n      return React.createElement(QuestionDescription, {\n        key: index,\n        id: index + 1,\n        questionData: this.problemUpdate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      });\n    }), React.createElement(\"input\", {\n      type: \"button\",\n      onClick: this.addAnotherProblem,\n      value: \"Add another problem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), this.state.problems.length > 0 ? React.createElement(\"input\", {\n      type: \"button\",\n      onClick: this.removeProblem,\n      value: \"Remove\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }) : \"\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.handleHomeworkUploadSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nexport default UploadHomeworkComponent;","map":{"version":3,"sources":["/Users/kritisharda/Documents/GitHub/grading-app-fe/src/components/ProfessorWorkflow/UploadHomeworkComponent.jsx"],"names":["React","QuestionDescription","Header","SubHeader","UploadHomeworkComponent","Component","constructor","state","problems","homeworkName","dueDate","numberOfProblems","dataMain","addAnotherProblem","bind","removeProblem","handleHomeworkUploadSubmit","handleHomeworkName","handleDueDate","problemUpdate","msg","getBase64","file","cb","reader","FileReader","readAsDataURL","onload","result","onerror","error","console","log","setState","problem","splice","event","hw_dd","FormData","append","n","i","prob","document","getElementById","getElementsByTagName","value","files","props","history","push","e","target","dataFromChild","myForm","formData","render","map","index","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport QuestionDescription from './QuestionDescriptionComponent';\nimport Header from '../HeaderComponent/HeaderComponent';\nimport SubHeader from '../SubHeaderComponent/SubHeaderComponent';\nimport './UploadHomeworkComponent.scss';\n\nclass UploadHomeworkComponent extends React.Component {\n    constructor() {\n      super();\n      this.state = {\n        problems: [],\n        homeworkName: '',\n        dueDate: '',\n        numberOfProblems: 1\n      }\n      this.dataMain = {};\n      this.addAnotherProblem = this.addAnotherProblem.bind(this);\n      this.removeProblem = this.removeProblem.bind(this);\n      this.handleHomeworkUploadSubmit = this.handleHomeworkUploadSubmit.bind(this);\n      this.handleHomeworkName = this.handleHomeworkName.bind(this);\n      this.handleDueDate = this.handleDueDate.bind(this);\n      this.problemUpdate = this.problemUpdate.bind(this);\n      this.msg = this.msg.bind(this);\n      this.getBase64 = this.getBase64.bind(this);\n    }\n\n    getBase64(file, cb) {\n      let reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = function () {\n          cb(reader.result)\n      };\n      reader.onerror = function (error) {\n          console.log('Error: ', error);\n      };\n    }\n\n    addAnotherProblem() {\n      this.setState({ \n        problems: [...this.state.problems,{}],\n        numberOfProblems: this.state.numberOfProblems+1\n      })\n    }\n\n    removeProblem() {\n      this.setState({ \n        problem: this.state.problems.splice(0,1),\n        numberOfProblems: this.state.numberOfProblems-1\n      })\n    }\n\n\n    handleHomeworkUploadSubmit(event) {\n\n      var hw_dd = new FormData();\n      hw_dd.append(\"homeworkName\", this.state.homeworkName);\n      hw_dd.append(\"dueDate\", this.state.dueDate);\n\n      // API call to create homework - assumptions - hw name is unique\n      // fetch('http://localhost:8080/upload', {\n      //   method: 'POST',\n      //   body: fd,\n      //   mode: \"no-cors\"\n      // });\n\n      const n = this.state.numberOfProblems;\n\n      for(let i=0; i<n; i++) {\n        let prob = new FormData();\n        prob.append(\"homeworkName\", this.state.homeworkName);\n        prob.append(\"problemName\",document.getElementById(i).getElementsByTagName(\"input\")[0].value);\n        prob.append(\"problemDescription\",document.getElementById(i).getElementsByTagName(\"input\")[1].value);\n        prob.append(\"inputFile\",document.getElementById(i).getElementsByTagName(\"input\")[2].files[0]);\n        prob.append(\"outputFile\",document.getElementById(i).getElementsByTagName(\"input\")[3].files[0]);\n\n        // API call to add problems to homework\n        // fetch('http://localhost:8080/create', {\n        //   method: 'POST',\n        //   body: prob,\n        //   mode: \"no-cors\"\n        // });\n      }\n\n      this.props.history.push('/professorConfirmation');\n\n      // const data = {\n      //   problems: this.state.problems,\n      //   homeworkName: this.state.homeworkName,\n      //   dueDate: this.state.dueDate\n      // }\n\n      // const n = this.state.numberOfProblems;\n\n      // for(let i = 0; i<n; i++) {\n\n      //   let prob = {\n      //     problemName: document.getElementById(i).getElementsByTagName(\"input\")[0].value,\n      //     problemDescription: document.getElementById(i).getElementsByTagName(\"input\")[1].value,\n      //     testCases: [ {\n      //       testCaseFile: document.getElementById(i).getElementsByTagName(\"input\")[2].files[0],\n      //       expectedOutputFile: document.getElementById(i).getElementsByTagName(\"input\")[3].files[0],\n      //     }]\n      //   }\n      //   if(data['problems'].length < i)\n      //     data['problems'].push(prob);\n      //   else\n      //     data['problems'][i] = prob;\n      // }\n\n      // var fd = new FormData();\n      // // fd.append(\"inputFile\",data['problems'][0]['testCases'][0]['testCaseFile']);\n      // // fd.append(\"outputFile\",data['problems'][0]['testCases'][0]['expectedOutputFile']);\n\n      // var arr = [];\n      // for(let i = 0; i<n; i++) {\n        \n      //   let ip64 = '';\n      //   let op64 = '';\n\n      //   this.getBase64(data['problems'][i]['testCases'][0]['testCaseFile'].file, (result) => {\n      //       ip64 = result;\n      //   });\n\n      //   this.getBase64(data['problems'][i]['testCases'][0]['expectedOutputFile'].file, (result) => {\n      //     op64 = result;\n      //   });\n      //   console.log(ip64);\n      //   const obj = {\n      //     // \"inputFile\": data['problems'][i]['testCases'][0]['testCaseFile'],\n      //     // \"outputFile\": data['problems'][i]['testCases'][0]['expectedOutputFile']\n      //     \"inputFile\": ip64,\n      //     \"outputFIle\": op64\n      //   }\n      //   arr.push(obj);\n      // }\n      // fd.append(\"test\", arr);\n\n      // console.log(arr);\n\n      // var formData = new FormData();\n      // formData.append(\"homeworkName\", this.state.homeworkName);\n      // formData.append(\"dueDate\", this.state.dueDate);\n      // formData.append(\"proplems\", null);\n\n      // fetch('http://localhost:8080/create', {\n      //   method: 'POST',\n      //   body: fd,\n      //   mode: \"no-cors\"\n      // });\n      // this.props.history.push('/');\n    }\n\n    handleHomeworkName(e) {\n      this.setState({homeworkName: e.target.value});\n    }\n\n    handleDueDate(e) {\n      this.setState({dueDate: e.target.value});\n    }\n\n  //   myCallback = (dataFromChild) => {\n  //     [...we will use the dataFromChild here...]\n  // },\n    problemUpdate(dataFromChild) {\n      this.dataMain = dataFromChild;\n      // console.log(dataFromChild);\n      // var idx = dataFromChild.id;\n      // var newProbs = this.state.problems;\n      // if(newProbs.length < idx)\n      //   newProbs.push(dataFromChild);\n      // else\n      //   newProbs[idx] = dataFromChild;\n\n      // this.setState({\n      //   problem: newProbs\n      // })\n    }\n\n    msg() {\n      // console.log(\"this changed!\")\n      let myForm = document.getElementById('myForm');\n      let formData = new FormData(myForm);\n\n      console.log(formData);\n    }\n  \n    render() {\n      return (\n        <div className='professor-container'>\n            <Header />\n            <SubHeader user=\"Professor\"/>\n            <h2 className=\"professor-heading\">Create Homework</h2>\n            <div className=\"professor-form\">\n              Homework Name: <input className=\"homework-name\" type=\"text\" name=\"homeworkName\" onChange={this.handleHomeworkName}/>\n              Due Date: <input type=\"date\" name=\"dueDate\" onChange={this.handleDueDate}/>\n              <QuestionDescription id={0} questionData={this.problemUpdate}/>\n              {\n                this.state.problems.map((problem,index) => {\n                  return (\n                    <QuestionDescription key={index} id={index+1} questionData={this.problemUpdate}/>\n                  )\n              })\n              }\n              <input type=\"button\" onClick={this.addAnotherProblem} value=\"Add another problem\"/>\n              {\n                (this.state.problems.length>0) ? \n                  <input type=\"button\" onClick={this.removeProblem} value=\"Remove\"/>\n                  :\n                  \"\"\n              }\n\n              <br />\n              <button type=\"submit\" onClick={this.handleHomeworkUploadSubmit}>Submit</button>\n            </div>\n        </div>\n      );\n    }\n  }\n\n  export default UploadHomeworkComponent;"]},"metadata":{},"sourceType":"module"}