{"ast":null,"code":"var _jsxFileName = \"/Users/kritisharda/Documents/GitHub/grading-app-fe/src/components/ProfessorWorkflow/QuestionDescriptionComponent.jsx\";\nimport React from 'react';\nimport { Form } from 'react-bootstrap';\nimport './QuestionDescriptionComponent.scss';\n\nclass QuestionDecriptionComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: props.id,\n      problemName: '',\n      problemDescription: '',\n      testCaseFile: '',\n      expectedOutputFile: ''\n    };\n    this.problemNameUpdate = this.problemNameUpdate.bind(this);\n    this.problemDescription = this.problemDescription.bind(this);\n    this.testCase = this.testCase.bind(this);\n    this.expectedOutput = this.expectedOutput.bind(this);\n    this.handleUploadClick = this.handleUploadClick.bind(this);\n  }\n\n  problemNameUpdate(e) {\n    this.setState({\n      problemName: e.target.value\n    });\n  }\n\n  problemDescription(e) {\n    this.setState({\n      problemDescription: e.target.value\n    });\n  }\n\n  testCase(e) {\n    this.setState({\n      testCaseFile: e.target.value\n    });\n  }\n\n  expectedOutput(e) {\n    this.setState({\n      expectedOutputFile: e.target.value\n    });\n  }\n\n  handleUploadClick() {\n    const data = {\n      problemName: this.state.problemName,\n      problemDescription: this.state.problemDescription,\n      test: {\n        testCaseFile: this.state.testCaseFile,\n        expectedOutputFile: this.state.expectedOutputFile\n      }\n    };\n  }\n\n  render() {\n    // return (\n    //     <div className=\"question-description-container\" id={this.state.id}>\n    //         Problem Name: <input type=\"text\" name=\"problemName\" onChange={this.problemNameUpdate} /> <br/>\n    //         Problem Decription: <input type=\"text\" name=\"problemDescription\" onChange={this.problemDescription} /> <br/>\n    //         Text Case File: <input type=\"file\" name=\"textCases\" onChange={this.testCase} /> <br/>\n    //         Expected Output File: <input type=\"file\" name=\"outputFile\" onChange={this.expectedOutput} /> <br/>\n    //         {/* <button onClick=\"this.handleUploadClick\">Upload</button> */}\n    //     </div>\n    //   );\n    return React.createElement(\"div\", {\n      className: \"question-description-container\",\n      id: this.state.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"formProblemName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Problem Name\"), React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"problemName\",\n      onChange: this.problemNameUpdate,\n      placeholder: \"Enter problem name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"formProblemDescription\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Problem Decription\"), React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"problemDescription\",\n      onChange: this.problemDescription,\n      placeholder: \"Enter problem description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"formTestCase\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Text Case File\"), React.createElement(Form.Control, {\n      type: \"file\",\n      name: \"textCases\",\n      onChange: this.testCase,\n      placeholder: \"Upload the test case file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"formExpectedOutput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Expected Output File\"), React.createElement(Form.Control, {\n      type: \"file\",\n      name: \"outputFile\",\n      onChange: this.expectedOutput,\n      placeholder: \"Upload the expected output file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default QuestionDecriptionComponent;","map":{"version":3,"sources":["/Users/kritisharda/Documents/GitHub/grading-app-fe/src/components/ProfessorWorkflow/QuestionDescriptionComponent.jsx"],"names":["React","Form","QuestionDecriptionComponent","Component","constructor","props","state","id","problemName","problemDescription","testCaseFile","expectedOutputFile","problemNameUpdate","bind","testCase","expectedOutput","handleUploadClick","e","setState","target","value","data","test","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport './QuestionDescriptionComponent.scss';\n\nclass QuestionDecriptionComponent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            id: props.id,\n            problemName: '',\n            problemDescription: '',\n            testCaseFile: '',\n            expectedOutputFile: ''\n        }\n\n        this.problemNameUpdate = this.problemNameUpdate.bind(this);\n        this.problemDescription = this.problemDescription.bind(this);\n        this.testCase = this.testCase.bind(this);\n        this.expectedOutput = this.expectedOutput.bind(this);\n        this.handleUploadClick = this.handleUploadClick.bind(this);\n    }\n    \n    problemNameUpdate(e) {\n        this.setState({ problemName: e.target.value });\n    }\n\n    problemDescription(e) {\n        this.setState({ problemDescription: e.target.value });    \n    }\n\n    testCase(e) {\n        this.setState({ testCaseFile: e.target.value });    \n    }\n\n    expectedOutput(e) {\n        this.setState({ expectedOutputFile: e.target.value });\n    }\n\n    handleUploadClick() {\n        const data = {\n            problemName: this.state.problemName,\n            problemDescription: this.state.problemDescription,\n            test: {\n                testCaseFile: this.state.testCaseFile,\n                expectedOutputFile: this.state.expectedOutputFile\n            }\n        }\n    }\n    \n    \n    render() {\n\n        // return (\n        //     <div className=\"question-description-container\" id={this.state.id}>\n        //         Problem Name: <input type=\"text\" name=\"problemName\" onChange={this.problemNameUpdate} /> <br/>\n        //         Problem Decription: <input type=\"text\" name=\"problemDescription\" onChange={this.problemDescription} /> <br/>\n        //         Text Case File: <input type=\"file\" name=\"textCases\" onChange={this.testCase} /> <br/>\n        //         Expected Output File: <input type=\"file\" name=\"outputFile\" onChange={this.expectedOutput} /> <br/>\n        //         {/* <button onClick=\"this.handleUploadClick\">Upload</button> */}\n        //     </div>\n        //   );\n\n        return (\n\n            <div className=\"question-description-container\" id={this.state.id}>\n                <Form.Group controlId=\"formProblemName\">\n                    <Form.Label>Problem Name</Form.Label>\n                    <Form.Control type=\"text\" name=\"problemName\" onChange={this.problemNameUpdate} placeholder=\"Enter problem name\" />\n                </Form.Group>\n                <Form.Group controlId=\"formProblemDescription\">\n                    <Form.Label>Problem Decription</Form.Label>\n                    <Form.Control type=\"text\" name=\"problemDescription\" onChange={this.problemDescription} placeholder=\"Enter problem description\" />\n                </Form.Group>\n                <Form.Group controlId=\"formTestCase\">\n                    <Form.Label>Text Case File</Form.Label>\n                    <Form.Control type=\"file\" name=\"textCases\" onChange={this.testCase} placeholder=\"Upload the test case file\" />\n                </Form.Group>\n                <Form.Group controlId=\"formExpectedOutput\">\n                    <Form.Label>Expected Output File</Form.Label>\n                    <Form.Control type=\"file\" name=\"outputFile\" onChange={this.expectedOutput} placeholder=\"Upload the expected output file\" />\n                </Form.Group>\n            </div>\n\n        );\n    }\n}\n\n  export default QuestionDecriptionComponent;"]},"metadata":{},"sourceType":"module"}