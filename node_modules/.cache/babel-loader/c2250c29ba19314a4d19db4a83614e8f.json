{"ast":null,"code":"var _jsxFileName = \"/Users/kritisharda/Documents/grading-app-fe/src/components/ProfessorWorkflow/QuestionDescriptionComponent.jsx\";\nimport React from 'react';\nimport { Form } from 'react-bootstrap';\n\nclass QuestionDecriptionComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: props.id,\n      problemName: '',\n      problemDescription: '',\n      testCaseFile: '',\n      expectedOutputFile: ''\n    };\n    this.problemNameUpdate = this.problemNameUpdate.bind(this);\n    this.problemDescription = this.problemDescription.bind(this);\n    this.testCase = this.testCase.bind(this);\n    this.expectedOutput = this.expectedOutput.bind(this);\n    this.handleUploadClick = this.handleUploadClick.bind(this);\n  }\n\n  problemNameUpdate(e) {\n    this.setState({\n      problemName: e.target.value\n    });\n  }\n\n  problemDescription(e) {\n    this.setState({\n      problemDescription: e.target.value\n    });\n  }\n\n  testCase(e) {\n    this.setState({\n      testCaseFile: e.target.value\n    });\n  }\n\n  expectedOutput(e) {\n    this.setState({\n      expectedOutputFile: e.target.value\n    });\n  }\n\n  handleUploadClick() {\n    const data = {\n      problemName: this.state.problemName,\n      problemDescription: this.state.problemDescription,\n      test: {\n        testCaseFile: this.state.testCaseFile,\n        expectedOutputFile: this.state.expectedOutputFile\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"question-description-container\",\n      id: this.state.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Problem Name: \", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"problemName\",\n      onChange: this.problemNameUpdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), \"Problem Decription: \", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"problemDescription\",\n      onChange: this.problemDescription,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), \"Text Case File: \", React.createElement(\"input\", {\n      type: \"file\",\n      name: \"textCases\",\n      onChange: this.testCase,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), \"Expected Output File: \", React.createElement(\"input\", {\n      type: \"file\",\n      name: \"outputFile\",\n      onChange: this.expectedOutput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: \"this.handleUploadClick\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Upload\")); // return (\n    //   <div className=\"question-description-container\" id={this.state.id}>\n    //       Problem Name: <input type=\"text\" name=\"problemName\" onChange={this.problemNameUpdate} /> <br/>\n    //       Problem Decription: <input type=\"text\" name=\"problemDescription\" onChange={this.problemDescription} /> <br/>\n    //       Text Case File: <input type=\"file\" name=\"textCases\" onChange={this.testCase} /> <br/>\n    //       Expected Output File: <input type=\"file\" name=\"outputFile\" onChange={this.expectedOutput} /> <br/>\n    //   </div>\n    // );\n  }\n\n}\n\nexport default QuestionDecriptionComponent;","map":{"version":3,"sources":["/Users/kritisharda/Documents/grading-app-fe/src/components/ProfessorWorkflow/QuestionDescriptionComponent.jsx"],"names":["React","Form","QuestionDecriptionComponent","Component","constructor","props","state","id","problemName","problemDescription","testCaseFile","expectedOutputFile","problemNameUpdate","bind","testCase","expectedOutput","handleUploadClick","e","setState","target","value","data","test","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form } from 'react-bootstrap';\n\nclass QuestionDecriptionComponent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            id: props.id,\n            problemName: '',\n            problemDescription: '',\n            testCaseFile: '',\n            expectedOutputFile: ''\n        }\n\n        this.problemNameUpdate = this.problemNameUpdate.bind(this);\n        this.problemDescription = this.problemDescription.bind(this);\n        this.testCase = this.testCase.bind(this);\n        this.expectedOutput = this.expectedOutput.bind(this);\n        this.handleUploadClick = this.handleUploadClick.bind(this);\n    }\n    \n    problemNameUpdate(e) {\n        this.setState({ problemName: e.target.value });\n    }\n\n    problemDescription(e) {\n        this.setState({ problemDescription: e.target.value });    \n    }\n\n    testCase(e) {\n        this.setState({ testCaseFile: e.target.value });    \n    }\n\n    expectedOutput(e) {\n        this.setState({ expectedOutputFile: e.target.value });\n    }\n\n    handleUploadClick() {\n        const data = {\n            problemName: this.state.problemName,\n            problemDescription: this.state.problemDescription,\n            test: {\n                testCaseFile: this.state.testCaseFile,\n                expectedOutputFile: this.state.expectedOutputFile\n            }\n        }\n    }\n    \n    \n    render() {\n\n        return (\n            <div className=\"question-description-container\" id={this.state.id}>\n                Problem Name: <input type=\"text\" name=\"problemName\" onChange={this.problemNameUpdate} /> <br/>\n                Problem Decription: <input type=\"text\" name=\"problemDescription\" onChange={this.problemDescription} /> <br/>\n                Text Case File: <input type=\"file\" name=\"textCases\" onChange={this.testCase} /> <br/>\n                Expected Output File: <input type=\"file\" name=\"outputFile\" onChange={this.expectedOutput} /> <br/>\n                <button onClick=\"this.handleUploadClick\">Upload</button>\n            </div>\n          );\n\n        // return (\n        //   <div className=\"question-description-container\" id={this.state.id}>\n        //       Problem Name: <input type=\"text\" name=\"problemName\" onChange={this.problemNameUpdate} /> <br/>\n        //       Problem Decription: <input type=\"text\" name=\"problemDescription\" onChange={this.problemDescription} /> <br/>\n        //       Text Case File: <input type=\"file\" name=\"textCases\" onChange={this.testCase} /> <br/>\n        //       Expected Output File: <input type=\"file\" name=\"outputFile\" onChange={this.expectedOutput} /> <br/>\n        //   </div>\n        // );\n    }\n}\n\n  export default QuestionDecriptionComponent;"]},"metadata":{},"sourceType":"module"}