{"ast":null,"code":"var _jsxFileName = \"/Users/kritisharda/Documents/grading-app-fe/src/components/ProfessorWorkflow/ProfessorConfirmationComponent.jsx\";\nimport React from 'react';\nimport QuestionDescription from './QuestionDescriptionComponent';\nimport Header from '../HeaderComponent/HeaderComponent';\nimport SubHeader from '../SubHeaderComponent/SubHeaderComponent';\nimport './UploadHomeworkComponent.scss';\n\nclass UploadHomeworkComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      problems: [],\n      homeworkName: '',\n      dueDate: '',\n      numberOfProblems: 1\n    };\n    this.dataMain = {};\n    this.addAnotherProblem = this.addAnotherProblem.bind(this);\n    this.removeProblem = this.removeProblem.bind(this);\n    this.handleHomeworkUploadSubmit = this.handleHomeworkUploadSubmit.bind(this);\n    this.handleHomeworkName = this.handleHomeworkName.bind(this);\n    this.handleDueDate = this.handleDueDate.bind(this);\n    this.problemUpdate = this.problemUpdate.bind(this);\n    this.msg = this.msg.bind(this);\n    this.getBase64 = this.getBase64.bind(this);\n  }\n\n  handleHomeworkUploadSubmit(event) {\n    var hw_dd = new FormData();\n    hw_dd.append(\"homeworkName\", this.state.homeworkName);\n    hw_dd.append(\"dueDate\", this.state.dueDate); // API call to create homework - assumptions - hw name is unique\n    // fetch('http://localhost:8080/create', {\n    //   method: 'POST',\n    //   body: fd,\n    //   mode: \"no-cors\"\n    // });\n\n    const n = this.state.numberOfProblems;\n\n    for (let i = 0; i < n; i++) {\n      let prob = new FormData();\n      prob.append(\"homeworkName\", this.state.homeworkName);\n      prob.append(\"problemName\", document.getElementById(i).getElementsByTagName(\"input\")[0].value);\n      prob.append(\"problemDescription\", document.getElementById(i).getElementsByTagName(\"input\")[1].value);\n      prob.append(\"inputFile\", document.getElementById(i).getElementsByTagName(\"input\")[2].files[0]);\n      prob.append(\"outputFile\", document.getElementById(i).getElementsByTagName(\"input\")[3].files[0]); // API call to add problems to homework\n      // fetch('http://localhost:8080/create', {\n      //   method: 'POST',\n      //   body: prob,\n      //   mode: \"no-cors\"\n      // });\n    }\n\n    this.props.history.push('/professorConfirmation');\n  }\n\n  handleHomeworkName(e) {\n    this.setState({\n      homeworkName: e.target.value\n    });\n  }\n\n  handleDueDate(e) {\n    this.setState({\n      dueDate: e.target.value\n    });\n  } //   myCallback = (dataFromChild) => {\n  //     [...we will use the dataFromChild here...]\n  // },\n\n\n  problemUpdate(dataFromChild) {\n    this.dataMain = dataFromChild; // console.log(dataFromChild);\n    // var idx = dataFromChild.id;\n    // var newProbs = this.state.problems;\n    // if(newProbs.length < idx)\n    //   newProbs.push(dataFromChild);\n    // else\n    //   newProbs[idx] = dataFromChild;\n    // this.setState({\n    //   problem: newProbs\n    // })\n  }\n\n  msg() {\n    // console.log(\"this changed!\")\n    let myForm = document.getElementById('myForm');\n    let formData = new FormData(myForm);\n    console.log(formData);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"professor-conf-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(SubHeader, {\n      user: \"Professor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      className: \"professor-conf-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Confirmation\"));\n  }\n\n}\n\nexport default UploadHomeworkComponent;","map":{"version":3,"sources":["/Users/kritisharda/Documents/grading-app-fe/src/components/ProfessorWorkflow/ProfessorConfirmationComponent.jsx"],"names":["React","QuestionDescription","Header","SubHeader","UploadHomeworkComponent","Component","constructor","state","problems","homeworkName","dueDate","numberOfProblems","dataMain","addAnotherProblem","bind","removeProblem","handleHomeworkUploadSubmit","handleHomeworkName","handleDueDate","problemUpdate","msg","getBase64","event","hw_dd","FormData","append","n","i","prob","document","getElementById","getElementsByTagName","value","files","props","history","push","e","setState","target","dataFromChild","myForm","formData","console","log","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport QuestionDescription from './QuestionDescriptionComponent';\nimport Header from '../HeaderComponent/HeaderComponent';\nimport SubHeader from '../SubHeaderComponent/SubHeaderComponent';\nimport './UploadHomeworkComponent.scss';\n\nclass UploadHomeworkComponent extends React.Component {\n    constructor() {\n      super();\n      this.state = {\n        problems: [],\n        homeworkName: '',\n        dueDate: '',\n        numberOfProblems: 1\n      }\n      this.dataMain = {};\n      this.addAnotherProblem = this.addAnotherProblem.bind(this);\n      this.removeProblem = this.removeProblem.bind(this);\n      this.handleHomeworkUploadSubmit = this.handleHomeworkUploadSubmit.bind(this);\n      this.handleHomeworkName = this.handleHomeworkName.bind(this);\n      this.handleDueDate = this.handleDueDate.bind(this);\n      this.problemUpdate = this.problemUpdate.bind(this);\n      this.msg = this.msg.bind(this);\n      this.getBase64 = this.getBase64.bind(this);\n    }\n\n\n    handleHomeworkUploadSubmit(event) {\n\n      var hw_dd = new FormData();\n      hw_dd.append(\"homeworkName\", this.state.homeworkName);\n      hw_dd.append(\"dueDate\", this.state.dueDate);\n\n      // API call to create homework - assumptions - hw name is unique\n      // fetch('http://localhost:8080/create', {\n      //   method: 'POST',\n      //   body: fd,\n      //   mode: \"no-cors\"\n      // });\n\n      const n = this.state.numberOfProblems;\n\n      for(let i=0; i<n; i++) {\n        let prob = new FormData();\n        prob.append(\"homeworkName\", this.state.homeworkName);\n        prob.append(\"problemName\",document.getElementById(i).getElementsByTagName(\"input\")[0].value);\n        prob.append(\"problemDescription\",document.getElementById(i).getElementsByTagName(\"input\")[1].value);\n        prob.append(\"inputFile\",document.getElementById(i).getElementsByTagName(\"input\")[2].files[0]);\n        prob.append(\"outputFile\",document.getElementById(i).getElementsByTagName(\"input\")[3].files[0]);\n\n        // API call to add problems to homework\n        // fetch('http://localhost:8080/create', {\n        //   method: 'POST',\n        //   body: prob,\n        //   mode: \"no-cors\"\n        // });\n      }\n\n      this.props.history.push('/professorConfirmation');\n    }\n\n    handleHomeworkName(e) {\n      this.setState({homeworkName: e.target.value});\n    }\n\n    handleDueDate(e) {\n      this.setState({dueDate: e.target.value});\n    }\n\n  //   myCallback = (dataFromChild) => {\n  //     [...we will use the dataFromChild here...]\n  // },\n    problemUpdate(dataFromChild) {\n      this.dataMain = dataFromChild;\n      // console.log(dataFromChild);\n      // var idx = dataFromChild.id;\n      // var newProbs = this.state.problems;\n      // if(newProbs.length < idx)\n      //   newProbs.push(dataFromChild);\n      // else\n      //   newProbs[idx] = dataFromChild;\n\n      // this.setState({\n      //   problem: newProbs\n      // })\n    }\n\n    msg() {\n      // console.log(\"this changed!\")\n      let myForm = document.getElementById('myForm');\n      let formData = new FormData(myForm);\n\n      console.log(formData);\n    }\n  \n    render() {\n      return (\n        <div className='professor-conf-container'>\n            <Header />\n            <SubHeader user=\"Professor\"/>\n            <h2 className=\"professor-conf-heading\">Confirmation</h2>\n            {/* <div className=\"professor-form\">\n              Homework Name: <input className=\"homework-name\" type=\"text\" name=\"homeworkName\" onChange={this.handleHomeworkName}/>\n              Due Date: <input type=\"date\" name=\"dueDate\" onChange={this.handleDueDate}/>\n              <QuestionDescription id={0} questionData={this.problemUpdate}/>\n              {\n                this.state.problems.map((problem,index) => {\n                  return (\n                    <QuestionDescription key={index} id={index+1} questionData={this.problemUpdate}/>\n                  )\n              })\n              }\n              <input type=\"button\" onClick={this.addAnotherProblem} value=\"Add another problem\"/>\n              {\n                (this.state.problems.length>0) ? \n                  <input type=\"button\" onClick={this.removeProblem} value=\"Remove\"/>\n                  :\n                  \"\"\n              }\n\n              <br />\n              <button type=\"submit\" onClick={this.handleHomeworkUploadSubmit}>Submit</button>\n            </div> */}\n        </div>\n      );\n    }\n  }\n\n  export default UploadHomeworkComponent;"]},"metadata":{},"sourceType":"module"}